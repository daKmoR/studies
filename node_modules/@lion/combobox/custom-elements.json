{
  "schemaVersion": "0.1.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "./index.d.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LionCombobox",
          "declaration": {
            "name": "LionCombobox",
            "module": "\"./src/LionCombobox.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LionCombobox",
          "declaration": {
            "name": "LionCombobox",
            "module": "./src/LionCombobox.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./lion-combobox.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./lion-combobox.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lion-combobox",
          "declaration": {
            "name": "LionCombobox",
            "module": "./src/LionCombobox.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/LionCombobox.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "LionCombobox",
          "superclass": {
            "name": "LionCombobox_base",
            "module": "./src/LionCombobox.d.ts"
          },
          "members": [
            {
              "kind": "method",
              "name": "_overlayListboxTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "import(\"@lion/core\").TemplateResult<1>"
                }
              }
            },
            {
              "kind": "field",
              "name": "_comboboxNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_selectionDisplayNode",
              "privacy": "protected",
              "type": {
                "text": "import(\"../types/SelectionDisplay\").SelectionDisplay | null"
              }
            },
            {
              "kind": "field",
              "name": "_overlayReferenceNode",
              "privacy": "protected",
              "type": {
                "text": "Element | null"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "privacy": "public",
              "type": {
                "text": "'none' | 'list' | 'inline' | 'both'"
              }
            },
            {
              "kind": "field",
              "name": "matchMode",
              "privacy": "public",
              "type": {
                "text": "'begin' | 'all'"
              }
            },
            {
              "kind": "field",
              "name": "showAllOnEmpty",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_ariaVersion",
              "privacy": "protected",
              "type": {
                "text": "'1.1' | '1.0'"
              }
            },
            {
              "kind": "field",
              "name": "__prevCboxValueNonSelected",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "__prevCboxValue",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "__hadUserIntendsInlineAutoFill",
              "privacy": "private",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "__listboxContentChanged",
              "privacy": "private",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "__requestShowOverlay",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_textboxOnInput",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_textboxOnKeydown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__unsyncCheckedIndexOnInputChange",
              "privacy": "protected",
              "description": "When textbox value doesn't match checkedIndex anymore, update accordingly...",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "__shouldAutocompleteNextUpdate",
              "privacy": "public",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "method",
              "name": "matchCondition",
              "privacy": "public",
              "description": "When the preconfigurable `match-mode` conditions are not sufficient,\none can define a custom matching function.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption"
                  }
                },
                {
                  "name": "textboxValue",
                  "type": {
                    "text": "string"
                  },
                  "description": "current ._inputNode value"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_showOverlayCondition",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "{ currentValue?: string, lastKey?: string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getTextboxValueFromOption",
              "privacy": "public",
              "description": "Return the value to be used for the input value",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setTextboxValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "__onOverlayClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onFilterMatch",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption & {\n        __originalInnerHTML?: string;\n    }"
                  }
                },
                {
                  "name": "matchingString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onFilterUnmatch",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption & {\n        __originalInnerHTML?: string;\n    }"
                  }
                },
                {
                  "name": "curValue",
                  "type": {
                    "text": "string | undefined"
                  },
                  "optional": true
                },
                {
                  "name": "prevValue",
                  "type": {
                    "text": "string | undefined"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "field",
              "name": "__computeUserIntendsAutoFill",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleAutocompletion",
              "privacy": "protected",
              "description": "Handles autocompletion. This entails:\n- list: shows a list on keydown character press\n- filter: filters list of potential matches according to matchmode or provided matchCondition\n- focus: automatically focuses closest match (makes it the activedescendant)\n- check: automatically checks/selects closest match when selection-follows-focus is enabled\n(this is the default configuration)\n- complete: completes the textbox value inline (the 'missing characters' will be added as\nselected text)",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "__hadSelectionLastAutofill",
              "privacy": "public",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "__textboxInlineComplete",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_autoSelectCondition",
              "privacy": "protected",
              "description": "When this condition is false, an end user will have to manually select a suggested\noption from the list (by default when autocomplete is 'none' or 'list').\nFor autocomplete 'both' or 'inline', it will automatically select on a match.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_syncToTextboxCondition",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "oldModelValue",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "config",
                  "type": {
                    "text": "{phase?:string}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncToTextboxMultiple",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "oldModelValue",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "__setComboboxDisabledAndReadOnly",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "__setupCombobox",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "__teardownCombobox",
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionCombobox",
          "declaration": {
            "name": "LionCombobox",
            "module": "./src/LionCombobox.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/LionCombobox.js",
      "declarations": [
        {
          "kind": "class",
          "name": "LionCombobox",
          "mixins": [
            {
              "name": "OverlayMixin",
              "package": "@lion/overlays"
            }
          ],
          "superclass": {
            "name": "LionListbox",
            "package": "@lion/listbox"
          },
          "members": [
            {
              "kind": "method",
              "name": "_inputGroupInputTemplate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_overlayListboxTemplate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_groupTwoTemplate",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "slots",
              "privacy": "public",
              "type": {
                "text": "SlotsMap"
              }
            },
            {
              "kind": "field",
              "name": "_comboboxNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_selectionDisplayNode",
              "privacy": "protected",
              "type": {
                "text": "SelectionDisplay | null"
              }
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_overlayContentNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_overlayReferenceNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_overlayInvokerNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_listboxNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_activeDescendantOwnerNode",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "__unsyncCheckedIndexOnInputChange",
              "privacy": "protected",
              "description": "When textbox value doesn't match checkedIndex anymore, update accordingly..."
            },
            {
              "kind": "method",
              "name": "matchCondition",
              "privacy": "public",
              "description": "When the preconfigurable `match-mode` conditions are not sufficient,\none can define a custom matching function.",
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption"
                  }
                },
                {
                  "name": "textboxValue",
                  "type": {
                    "text": "string"
                  },
                  "description": "current ._inputNode value"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_showOverlayCondition",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "{ currentValue?: string, lastKey?: string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getTextboxValueFromOption",
              "privacy": "public",
              "description": "Return the value to be used for the input value",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onListboxContentChanged",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_textboxOnInput",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_textboxOnKeydown",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_listboxOnClick",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setTextboxValue",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__onOverlayClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_repropagationCondition",
              "privacy": "public",
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "FormControlHost"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onFilterMatch",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption & {__originalInnerHTML?:string}"
                  }
                },
                {
                  "name": "matchingString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onFilterUnmatch",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "LionOption & {__originalInnerHTML?:string}"
                  }
                },
                {
                  "name": "curValue",
                  "type": {
                    "text": "string"
                  },
                  "optional": true
                },
                {
                  "name": "prevValue",
                  "type": {
                    "text": "string"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "__computeUserIntendsAutoFill",
              "privacy": "private",
              "description": "Computes whether a user intends to autofill (inline autocomplete textbox)",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "{ prevValue:string, curValue:string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleAutocompletion",
              "privacy": "protected",
              "description": "Handles autocompletion. This entails:\n- list: shows a list on keydown character press\n- filter: filters list of potential matches according to matchmode or provided matchCondition\n- focus: automatically focuses closest match (makes it the activedescendant)\n- check: automatically checks/selects closest match when selection-follows-focus is enabled\n(this is the default configuration)\n- complete: completes the textbox value inline (the 'missing characters' will be added as\nselected text)"
            },
            {
              "kind": "method",
              "name": "__textboxInlineComplete",
              "privacy": "private",
              "parameters": [
                {
                  "name": "option",
                  "default": "this.formElements[this.activeIndex]"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_autoSelectCondition",
              "privacy": "protected",
              "description": "When this condition is false, an end user will have to manually select a suggested\noption from the list (by default when autocomplete is 'none' or 'list').\nFor autocomplete 'both' or 'inline', it will automatically select on a match."
            },
            {
              "kind": "method",
              "name": "_setupListboxNode",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_defineOverlayConfig",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_setupOverlayCtrl",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_teardownOverlayCtrl",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_setupOpenCloseListeners",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_teardownOpenCloseListeners",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_listboxOnKeyDown",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncToTextboxCondition",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "string|string[]"
                  }
                },
                {
                  "name": "oldModelValue",
                  "type": {
                    "text": "string|string[]"
                  }
                },
                {
                  "name": "config",
                  "type": {
                    "text": "{phase?:string}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncToTextboxMultiple",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "oldModelValue",
                  "type": {
                    "text": "string[]"
                  },
                  "default": "[]"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomClasses",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__setComboboxDisabledAndReadOnly",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__setupCombobox",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__teardownCombobox",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__requestShowOverlay",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "clear",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "privacy": "public",
              "type": {
                "text": "'none'|'list'|'inline'|'both'"
              },
              "description": "When \"list\", will filter listbox suggestions based on textbox value.\nWhen \"both\", an inline completion string will be added to the textbox as well.",
              "default": "'both'"
            },
            {
              "kind": "field",
              "name": "matchMode",
              "privacy": "public",
              "type": {
                "text": "'begin'|'all'"
              },
              "description": "When typing in the textbox, will by default be set on 'begin',\nonly matching the beginning part in suggestion list.\n=> 'a' will match 'apple' from ['apple', 'pear', 'citrus'].\nWhen set to 'all', will match middle of the word as well\n=> 'a' will match 'apple' and 'pear'",
              "default": "'all'"
            },
            {
              "kind": "field",
              "name": "showAllOnEmpty",
              "privacy": "public",
              "description": "When true, the listbox is open and textbox goes from a value to empty, all options are shown.\nBy default, the listbox closes on empty, similar to wai-aria example and <datalist>",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "__shouldAutocompleteNextUpdate",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "autocomplete",
              "fieldName": "autocomplete"
            },
            {
              "name": "match-mode",
              "fieldName": "matchMode"
            },
            {
              "name": "show-all-on-empty",
              "fieldName": "showAllOnEmpty"
            },
            {
              "name": "__shouldAutocompleteNextUpdate",
              "fieldName": "__shouldAutocompleteNextUpdate"
            }
          ],
          "tagName": "lion-combobox"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionCombobox",
          "declaration": {
            "name": "LionCombobox",
            "module": "./src/LionCombobox.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test/lion-combobox-integrations.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/lion-combobox.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./types/SelectionDisplay.d.ts",
      "declarations": [],
      "exports": []
    }
  ]
}
