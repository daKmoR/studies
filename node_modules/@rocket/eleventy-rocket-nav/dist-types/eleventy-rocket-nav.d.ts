export type NavigationNode = import("./types").NavigationNode;
export type Heading = import("./types").Heading;
export type SaxData = import("./types").SaxData;
/**
 * @param {NavigationNode[]} nodes
 * @param {string} key
 */
export function findNavigationEntries(nodes?: NavigationNode[], key?: string): {
    parentKey?: string;
    url: string;
    pluginType: string;
    templateContent: string;
    key: string;
    title: string;
    order: number;
    parent: string;
}[];
/**
 * @param {NavigationNode[]} nodes
 * @param {string} activeKey
 */
export function findBreadcrumbEntries(nodes: NavigationNode[], activeKey: string): any[];
/**
 * @param {NavigationNode[]} nodes
 * @param {object} options
 * @param {string} options.title
 */
export function rocketPageAnchors(nodes: NavigationNode[], { title }: {
    title: string;
}): {
    key: string;
    parent: string;
    url: string;
    pluginType: string;
    parentKey: string;
    title: string;
    anchor: boolean;
}[];
/**
 * @param {NavigationNode[]} pages
 * @param {*} _options
 * @return {string}
 */
declare function navigationToHtml(pages: NavigationNode[], _options?: any): string;
export { navigationToHtml as toHtml };
//# sourceMappingURL=eleventy-rocket-nav.d.ts.map